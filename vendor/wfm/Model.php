<?php

namespace wfm;

abstract class Model { // Создаем базовый абстрактный класс модели (нельзя создавать объекты, можно только наследоваться)

    public array $attributes = []; // Это свойство нужно для автозаполнения модели данными, когда данные приходят, например, из форм от пользователя, мы можем взять только те данные безопасным способом, которые нам нужны. Это мы укажем в массиве "attributes"
    public array $errors = []; // Сюда мы будем складывать возможные ошибки, которые будут получены, например, при валидации данных пользователей
    public array $rules = []; // Массив правил валидации для проверки правильности и корректности данных, отправляемых пользователем через форму на сайте
    public array $labels = []; // Свойство нам нужно, чтобы указывать какое именно поле не прошло валидацию. В первую очередь, чтобы реализовать мультиязычность - мы в него запишем переводные фразы для отображения пользователю

    public function __construct () { // Получим объект подключения к БД
        Db::getInstance ();
    }

    public function load ($data) { // Метод, который будет загружать только те переданные пользователем данные (основываясь на аттрибутах $attributes), которые нам нужны для работы данной модели. На вход принимает массив данных $data

        foreach ( $this->attributes as $name => $value ) { // Будет проходиться в цикле по аттрибутам
            if (isset($data[$name])) { // Если в полученном массиве данных $data есть данные с ключом $name
                $this->attributes[$name] = $data[$name]; // Заполняем аттрибуты по ключу $name теми значениями, которые к нам пришли
            }

        }

    }


}