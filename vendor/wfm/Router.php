<?php


namespace wfm;


class Router {

    protected static array $routes = []; // Будет содержаться таблица маршрутов, которую мы будем добавлять в этот массив "routes"
    protected static array $route = []; // Будет попадать конкретный один маршрут (помещен в массив "route"), с которым маршрутизатор нашел соотвествие проходя по всей таблице маршрутов, и перенаправит на обработку конкретному контроллеру

    public static function add ($regexp, $route = []) { // Метод для добавления маршрутов в таблицу "routes". "$regexp" - шаблон для регулярного выражения, который будет описывать тот или иной url-адрес, "$route" - соотвествие, тот контроллер и тот экшн(метод), который необходимо соотнести с данным шаблонным адресом. Если пользователь не укажет конкретные параметры в url-адресе (контроллер и метод), будут использованы параметры (контроллер и метод) по умолчанию.

        self::$routes[$regexp] = $route; // В таблицу маршрутов, по ключу, который мы получаем аргументом "$regexp" добавляем то , что у нас пришло в "route" (контроллер и метод)
    }

    public static function getRoutes (): array { // Будет возвращать массив, все маршруты "routes"

        return self::$routes;

    }

    public static function getRoute (): array { // Будет возвращать массив, конкретный маршрут "route", с которым было найдено соотвествие

        return self::$route;

    }

    public static function dispatch ($url) { // Делаем статичные методы, чтобы не создавать экземпляр данного класса "router", а просто вызывать методы из данного класса

        var_dump ($url); // Распечатаем то, что получаем в качестве аргумента "$url"

    }










}