<?php


namespace app\controllers\admin;


use app\models\admin\Download;
use RedBeanPHP\R;
use wfm\App;
use wfm\Pagination;

/** @property Download $model */
class DownloadController extends AppController { // Контроллер (класс) для работы с загружаемыми файлами для прикрепления их к цифровым товарам с админ-панели

    public function indexAction() { // Метод для обработки отображения прикрепляемых файлов в админ-панели
        // Покажем список файлов
        $lang = App::$app->getProperty('language'); // Получаем текущий активный язык сайта из контейнера App
        $page = get('page'); // Нам потребуется здесь пагинация, поэтому получим GET параметр page для пагинации
        $perpage = 20; // Количество товаров на странице
        $total = R::count('download'); // Нам нужно посчитать сколько всего у нас файлов для цифровых товаров (тип 'download')
        $pagination = new Pagination($page, $perpage, $total); // Получаем объект пагинации. Передаем на вход нужные параметры $page, $perpage, $total
        $start = $pagination->getStart(); // Переменная $start - с какой позиции нам начинать выбирать записи из БД при выдаче на страницу при пагинации

        $downloads = $this->model->get_downloads($lang, $start, $perpage); // Получаем список файлов для цифровых товаров из БД в переменную $downloads. На вход передаем параметры $lang, $start, $perpage
        $title = 'Файлы (цифровые товары)'; // Объявляем переменную $title и записываем в нее значение 'Файлы (цифровые товары)'
        $this->setMeta("Админка :: {$title}"); // Передаем название title в представление
        $this->set(compact('title', 'downloads', 'pagination', 'total')); // Передаем сами данные переменных в вид
    }

    public function addAction () { // Метод для добавления файла цифрового товара
        // Данные будут передаваться методом POST
        if (!empty($_POST)) { // Если не пуст массив $_POST, мы будем обрабатывать полученные от пользователя через форму данные

            /*debug ($_POST); // Смотрим, что к нам приходит из массива $_POST
            debug ($_FILES); // Смотрим, что к нам приходит из массива $_FILES*/

            if ($this->model->download_validate ()) { // Если валидация загружаемого файла прошла успешно

                if ($data = $this->model->upload_file ()) { // Если загрузка файла прошла успешно
                    // Если в переменную $data попадает массив, а не false, тогда мы должны записать информацию о загруженном файле
                    if ($this->model->save_download ($data)) { // Если мы успешно записали информацию о загруженном файле в БД
                        $_SESSION['success'] = 'Файл успешно добавлен!'; // В массив $_SESSION['success'] запишем сообщение об успехе
                    } else {
                        $_SESSION['errors'] = 'Ошибка добавления файла!'; // В массив $_SESSION['errors'] запишем сообщение об ошибке
                    }
                } else { // Если метод upload_file выдает ошибку (вернет false: не смогли переместить загруженный файл)
                    $_SESSION['errors'] = 'Ошибка перемещения файла!'; // В массив $_SESSION['errors'] запишем сообщение об ошибке
                }

            } // Если мы не прошли валидацию, то у нас ошибка будет показана, тк мы в $_SESSION['errors'] записали все возможные ошибки

            redirect (); // Делаем редирект на ту же страницу

        }
        // Если страница запрошена методом GET, тогда мы выведем мета-данные страницы
        $title = 'Добавление файла (цифрового товара)'; // Объявляем переменную $title и записываем в нее значение 'Файлы (цифровые товары)'
        $this->setMeta("Админка :: {$title}"); // Передаем название title в представление
        $this->set(compact('title')); // Передаем сами данные переменной в вид


    }

}